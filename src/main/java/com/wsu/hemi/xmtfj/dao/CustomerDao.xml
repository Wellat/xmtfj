<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wsu.hemi.xmtfj.dao.CustomerDao">
    <resultMap id="BaseResultMap" type="com.wsu.hemi.xmtfj.entity.TransactionInfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="region" property="region" jdbcType="VARCHAR"/>
        <result column="sell_sum" property="sellSum" jdbcType="INTEGER"/>
        <result column="sell_area" property="sellArea" jdbcType="REAL"/>
        <result column="total_sum" property="totalSum" jdbcType="INTEGER"/>
        <result column="total_area" property="totalArea" jdbcType="REAL"/>
        <result column="date" property="date" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, region, sell_sum, sell_area, total_sum, total_area, date
  </sql>

    <select id="getDistinctDateInTran" resultType="java.util.Date">
        SELECT DISTINCT date FROM transaction_info ORDER BY date asc;
    </select>

    <select id="getAllSumInTran" resultMap="BaseResultMap">
        SELECT sum(sell_sum) as sell_sum,
        sum(sell_area) as sell_area,
        sum(total_sum) as total_sum,
        sum(total_area) as total_area,
        date
        FROM transaction_info GROUP BY date ORDER BY date asc;
    </select>


    <select id="getHotSpfBylimit" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
            a.region,
            sum(a.sell_sum) as sell_sum,
            sum(a.sell_area) as sell_area
        from
        (
            SELECT *
            from transaction_info
            ORDER BY date DESC
            LIMIT #{limit,jdbcType=INTEGER}
        ) a
        GROUP BY a.region;
    </select>


</mapper>